<project name="asterics.imported" basedir="." xmlns:fx="javafx:com.sun.javafx.tools.ant">
	<property name="APE.propertiesFile" value="APE.properties"></property>
	<property name="APE.optionalServicesFile" value="" />
	
	<!-- Please modify the ARE.baseURI path to your ARE installation -->
	<property name="ARE.baseURI" value="D:\AsTeRICS\AsTeRICS_Licensing_Packaging_Asterics_2_8_Prep\bin\ARE\"> </property>

	
	<loadproperties srcFile="${APE.propertiesFile}" />
	
	<condition property="APE.buildDir" value="build/">		
		<not>
			<isset property="APE.buildDir" />
		</not>
	</condition>
	
	<property name="build.merged" location="${APE.buildDir}/merged" />
	<property name="build.merged.ARE" location="${build.merged}/bin/ARE" />
	<property name="build.deploy" location="${APE.buildDir}/deploy" />
	<!-- the build platform is actually also the target platform, so we can differ the services files configuration -->
	<condition property="APE.targetOS" value="windows" else="linux">
		<os family="windows" />
	</condition>

	<!-- create platform dependent property value for services startup when starting the ARE -->
	<property name="APE.servicesFiles" value="services.ini;services-${APE.targetOS}.ini;${APE.optionalServicesFile}" />

	<!-- if property is not set, set it to false -->
	<condition property="APE.embedJava" value="false">
		<not>
			<isset property="APE.embedJava" />
		</not>
	</condition>
	
	<!-- if fx.platform.basedir is not set, java.home will be used as platform -->	
	<condition property="fx.platform.basedir" value="${java.home}">		
			<not>
				<isset property="fx.platform.basedir" />
			</not>
	</condition>
	
	<!-- only if APE.embedJava=true the JRE of the configured platform.basedir will be embedded -->
	<condition property="APE.embedJava.fx.platform.basedir" value="${fx.platform.basedir}" else="">
		<istrue value="${APE.embedJava}"/>
	</condition>
	
	<!-- in case of embeddedjava add a postfix to the application name -->
	<condition property="APE.fx.deploy.outfile" value="${fx.application.name}-javaembedded" else="${fx.application.name}">
		<istrue value="${APE.embedJava}"/>
	</condition>	
	
	<!-- if ARE.baseURI is not set assume that APE is located in the parent folder of basedir -->
	<condition property="APE.baseURI" else="${ARE.baseURI}../APE/" value="${basedir}/../">
		<not>
			<isset property="ARE.baseURI" />
		</not>
	</condition>

	<!--
	<echoproperties>
	</echoproperties>
	-->
	
	<target name="init-fx-tasks">
		<path id="fxant">
			<filelist>
				<file name="${java.home}\..\lib\ant-javafx.jar" />
				<file name="${java.home}\lib\jfxrt.jar" />
				<file name="${basedir}" />
			</filelist>
		</path>

		<taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpathref="fxant" />
	</target>

	<target name="cleanup">
		<delete dir="${build.deploy}" failonerror="false" />
		<delete dir="${build.merged.ARE}" failonerror="false"/>
	</target>
	<target name="setup-staging-area">
		<mkdir dir="${build.deploy}" />
		<delete failonerror="false">
			<fileset dir="${build.merged.ARE}" includes="**/*.log" />
		</delete>
		<delete failonerror="false">
			<fileset dir="${build.merged.ARE}/profile/org.eclipse.osgi" />
		</delete>
	</target>
		
	<!-- calls the javafx deployment tasks and creates the requested installers -->
	<target name="make-installer-only" depends="init-fx-tasks">
		<fx:resources id="appRes">
			<fx:fileset dir="${build.merged.ARE}" />
			<fx:fileset dir="${build.merged.ARE}" type="license" includes="LICENSE" />
		</fx:resources>

		<fx:application id="fxApplication" name="${APE.fx.deploy.outfile}" mainClass="org.eclipse.core.runtime.adaptor.EclipseStarter" version="${fx.application.version}" toolkit="swing" />
		<fx:deploy verbose="true" embedJNLP="false" extension="false" includeDT="false" offlineAllowed="true" outdir="${build.deploy}" outfile="${APE.fx.deploy.outfile}" nativeBundles="${fx.deploy.nativeBundles}" updatemode="background">
			<fx:preferences shortcut="${fx.preferences.shortcut}" install="${fx.preferences.install}" menu="${fx.preferences.menu}" />

			<fx:platform basedir="${APE.embedJava.fx.platform.basedir}">
				<property name="osgi.configuration.area" value="profile" />
				<property name="osgi.clean" value="true" />
				<property name="org.osgi.framework.bootdelegation" value="*" />
				<property name="org.osgi.framework.system.packages.extra" value="sun.misc" />
				<property name="Ansi" value="true" />
				<property name="java.util.logging.config.file" value="logging.properties" />
				<!--
				<property name="eu.asterics.ARE.startModel" value="autostart.acs" />
				-->
				<property name="eu.asterics.ARE.ServicesFiles" value="${APE.servicesFiles}" />
			</fx:platform>

			<fx:application refId="fxApplication" />
			<fx:resources refid="appRes" />
			<fx:info title="${fx.info.title}" vendor="${fx.info.vendor}" description="${fx.info.description}" license="${fx.info.license}" category="${fx.info.category}" />
		</fx:deploy>
	</target>

	<!-- call APE tool from build script to copy AsTeRICS resources to ${build.merged.ARE} -->
	<target name="APE-copy">
		<java jar="${APE.baseURI}/APE.jar" fork="true">
			<sysproperty key="APE.projectDir" value="${basedir}"/>	
		</java>	
			
	</target>

	<target name="copy-custom-files-for-bundle">
		<copy todir="${P4All.mergedCustomDir}" overwrite="yes" verbose="true">
			<fileset dir="custom" excludes="bin/ARE/profile/">
					<exclude name="bin/ARE/models/*.acs"/>
			</fileset>
		</copy>
	</target>

</project>
